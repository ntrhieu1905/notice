Kinh nghiệm phỏng vấn:
- ReactJS:
1. Phải nắm vững các cú pháp ES6/7, các thao tác với mảng và object phải biết map, filter, find, reduce. Biết await/async là lợi thế.
2. Hiểu rõ bản chất props và state, life cycle, phân biệt được stateless và stateful component (hoặc smart và dump component).
3. Tổ chức component phải rõ ràng, tách bạch khai báo styles, hình ảnh. Cách phân tích 1 component: có thể đưa bạn 1 hình ảnh màn hình bạn có thể nói được các thành phần bên trong và cách tổ chức chúng.
4. Biết cách thao tác với Rest API: đây là bắt buộc. Hiểu được POST/GET/PUT, body data và header (token user).
5. Biết xài Redux là 1 lợi thế: xin đừng nói bạn chỉ làm app nhỏ nên ko cần Redux, vì như thế chứng tỏ bạn chưa sẵn sàng để học cái mới hoặc 6 tháng qua với bạn chỉ là cưỡi ngựa xem hoa. Thậm chí công ty mình dùng MobX nên sẽ hỏi bạn có sãn sàng đổi qua MobX không.
6. Đã biết sử dụng 1 số lib như React Router, Redux Thunk, Redux Saga, Axios ..
7. Biết làm animation là lợi thế lớn.
8. Bạn biết lập trình React Native là lợi thế rất lớn dù là iOS hoặc Android.

SSR & CSR
- CSR: 
+ Server sending response -> HTML -> Browser download JS,CSS -> Excute React -> Viewable and Interactable
=> Server gửi phản hồi 1 file html trống đến browser, và browser sẽ tải các js,css. Sau đó thực thi với react, sau khi thực thi xong sẽ
hiển thị nội dung và có thể tương tác được(với các chức năng)
- SSR:
+ Server rendered response -> HTML bundle -> Browser render page(JS,CSS) + viewable -> Excute React -> Interactable
=> Server sẽ quản lý việc render file html(có đầy đủ nội dung) về browser và hiển thị nội dung. Sau đó sẽ thực thi với react và có thể
tương tác.

- Nodejs
(https://www.facebook.com/groups/congdong.nodejs.vietnam/search/?query=debug%20npm&epa=SEARCH_BOX):
sau khi làm việc 1 thời gian thì lý do để chọn nodejs cũng tương đối nhiều. Không tự nhiên mà thế giới nó đổ xô đi làm nodejs đâu.
- Scripting language: tương đối dễ học nhưng khó để kiểm soát performance, có thể build 1 ông dev làm từ front-end, backend, cross-platform mobile.
- Fetching data cực lợi thế khi nó support sẵn JSON, các bộ kết nối DB có sẵn cũng như thừa hưởng được bộ lib trên NPM để làm việc hiểu quả . Xử lý data cực gọn nhẹ, tất nhiên python thì nó vẫn có advance của nó.
- Single-thread: nói nghe buồn cười nhưng cái này mới là cái chính vì thực tế single-thread của nodejs nó dựng lên nhờ V8 và cơ chế event loop để cho cái gọi là asynchronus(non-blocking). Cái này tương đối hiệu quả và không ngốn quá nhiều CPU.
- Event handler: nghe có vẻ không liên quan nhưng trên thực tế event-handler của event-driven programming phù hợp với kiến trúc microservices hiện tại và tương lai.
- Microservices: hệ thống bây giờ được sử dụng như SaaS, PaaS, IaaS, có kiến trúc là microservices được deploy trên các distributed server, nên ngôn ngữ đã dần không bị bắt buộc cho project nữa, project có thể code bằng nodejs để tiết kiệm tương đối thời gian làm backend, debug dễ dàng, chủ yếu là lấy market share.
