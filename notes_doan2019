Template: https://coreui.io/vue/
Plugins:
- Chart: https://ecomfe.github.io/echarts-doc/public/en/index.html
- Editor: https://ui.toast.com/tui-editor/
- Jquery Validation: https://jqueryvalidation.org/
- Datatable | EditTable: 
https://datatables.net/
https://markcell.github.io/jquery-tabledit/#examples
- Element: https://element.eleme.io/#/en-US
- Boostrap-Vue: https://bootstrap-vue.js.org/

Notes:
Rules common
== CLEAN CODE
- Refactor code theo chuẩn dưới đây:
@Tên class phải là 1 danh từ, tên methods(function) phải là 1 động từ. 
Đặt tên theo tiếng anh cho gọn. Và cố gắng đặt tên các methods dễ hiểu như:
vd: public function getListUser()

@Sử dụng Camelcase
vd: Biến: $testCase - Function: function testFunction()

@Constant quy định chung 1 file config.
vd1: const TYPE_USER = [
      0: Admin,
      1: User,
      2: Inventory,
    ]
vd2: trường hợp if(type == TYPE_USER_VAL['Admin'])) để set lấy value type = 0 thì tạo 1 constant: 
const TYPE_USER_VAL = [
      Admin: 0,
      User: 1,
      Inventory: 2,
    ]

@Style common: 
+ ES6 có rất nhiều cách viết khác nhau.
vd: trong vue
methods: {
C1: foo: function($param) {
	}
C2: foo($param) {
	}
C3: foo: ($param) => {	
	}
}
-> Sử dụng cách 2 or 3.
+ Căn lề tab và spaces: tab vô 2 spaces cho tất cả các file js, vue, php, css,...

@Sử dụng transaction khi update/edit/delete
+ Đặt trong try catch.

@Về css chung thì trong: resoucres/assets/scss/
+ index.scss là import các file trong folder khi sử dụng
Các folder:
+ base: các var chung
+ components: mỗi components nào cần thì css
vd: category.scss. Và css chung cả hệ thống thì có file là common.scss
+ vendors: các thư viện thứ 3 

@Khác:
- Hạn chế chừa dòng trống.
- Viết code có comment bất kể chỗ nào.

== DB:
1. Migration:
- 7 field mặc định cho tất cả các bảng
isDelete: null
Created_at/by: not null
Update_at/by: not null
Deleted_at/by: not null


